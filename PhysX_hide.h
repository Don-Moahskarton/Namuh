/**=====================================================================================
*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
---------------------------- Namuh Test Child Header File ------- v alpha1 ------------
*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
=====================================================================================**/
#ifndef CLASS_PHYSXHIDE // Pour éviter la redondance des déclarations de cette classe (on l'inclus plusieurs fois)
#define CLASS_PHYSXHIDE

#include "Namuh_Main_H.h"
class HideDescription		// Parameters needed to make a hide
{
	public:

		HideDescription();
		bool Cook();		// Verify params, and tells if correct

		NxOgre::ClothDescription PhysX_descr;	// note that the mMesh attribute is optional, if not provided, it will be generated by Cook.
		Construction*	container;
		

		string materialName;					// default is "hide"
		string name;

		Vector3 cornerPos[4];
		Critter::Body* linkedBodies[4];
		int		widthDivisions,
				heightDivisions;	// divisions will be autmotically filled according to corner pos

		float	surface;			// surface will be automatically calculated at cooking stage according to corners

		bool	isWing,
				isBounce,
				isCooked;	// params aren't valid if the description isn't cooked

	private:

		NxOgre::ManualMesh hideMesh;
};


class Hide : public ConstructionElement // wrapper for physX hide so we can add some attributes.
{
	public:
		Hide(HideDescription*); 

		HideDescription descr;

		Cloth* cloth;

		NamedDataPool* Serialize();			// used to save the current state of this hide

		static Hide* MakeFromDataPool(NamedDataPool&);	// used to load an external hide

};

#endif // CLASS_PHYSXHIDE

